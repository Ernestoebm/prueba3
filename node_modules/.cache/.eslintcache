[{"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\index.js":"1","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\App.js":"2","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\Owned.js":"3","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Context\\AuthContext.js":"4","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\Create.js":"5","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\Login.js":"6","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Layout.js":"7","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\All.js":"8","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Auth\\RequireAuth.js":"9","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Form.js":"10","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Navbar.js":"11","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Hooks\\useAuth.js":"12","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Posts\\Post.js":"13","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Providers\\authProvider.js":"14"},{"size":262,"mtime":1637896012201,"results":"15","hashOfConfig":"16"},{"size":1025,"mtime":1637992226315,"results":"17","hashOfConfig":"16"},{"size":1758,"mtime":1637997247365,"results":"18","hashOfConfig":"16"},{"size":761,"mtime":1637983030770,"results":"19","hashOfConfig":"16"},{"size":1578,"mtime":1637999945065,"results":"20","hashOfConfig":"16"},{"size":1495,"mtime":1638002074855,"results":"21","hashOfConfig":"16"},{"size":268,"mtime":1637983105590,"results":"22","hashOfConfig":"16"},{"size":1668,"mtime":1637996376895,"results":"23","hashOfConfig":"16"},{"size":358,"mtime":1637877151396,"results":"24","hashOfConfig":"16"},{"size":918,"mtime":1637993149945,"results":"25","hashOfConfig":"16"},{"size":2245,"mtime":1638002024815,"results":"26","hashOfConfig":"16"},{"size":157,"mtime":1637982209480,"results":"27","hashOfConfig":"16"},{"size":6451,"mtime":1638001245665,"results":"28","hashOfConfig":"16"},{"size":568,"mtime":1637982946470,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"171nny1",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\index.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\App.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\Owned.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Context\\AuthContext.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\Create.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\Login.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Layout.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Pages\\All.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Auth\\RequireAuth.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Form.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Navbar.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Hooks\\useAuth.js",[],"C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Components\\Posts\\Post.js",["59"],"import useAxios from \"axios-hooks\";\n\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { faComment, faHeart, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { generate } from \"shortid\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useAuth } from \"../../Hooks/useAuth\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Comment = ({ description, user }) => {\n    return (\n        <div className=\"text-xs px-4 py-2 space-y-2 border-t border-gray-400 lg:text-sm\">\n            <h1 className=\"font-bold\">@{user.username}</h1>\n            <h2>{ description }</h2>\n        </div>\n    )\n}\n\nconst AddComment = ({ postId, triggerUpdate }) => {\n    const comm = useRef(null);\n    const [emptyInput, setEmptyInput] = useState();\n    const auth = useAuth();\n\n    const [, createComment] = useAxios({\n        url: `${process.env.REACT_APP_API}/post/comment/${postId}`,\n        method: 'PATCH',\n        headers: {\n            Authorization: `Bearer ${auth?.user?.token}`\n        }\n    }, { manual: true });\n\n    async function onSubmit(e) {\n        e.preventDefault();\n\n        if (comm?.current?.value === \"\") {\n            alert('No puedes agregar un comentario vacio');\n            return;\n        }\n\n        try {\n            await createComment({ data: { description: comm?.current?.value } });\n            await triggerUpdate();\n\n            setEmptyInput('');\n        } catch(err) {\n            console.log(err.response);\n            alert('error');\n        }\n    }\n\n    return (\n        <form className=\"w-full px-4 my-2\" onSubmit={onSubmit}>\n            <input ref={comm} \n                className=\"w-full rounded-lg px-2 py-1 border-2 border-primary text-sm\" \n                type=\"text\"\n                value={emptyInput}\n                placeholder=\"Presiona enter para comentar...\"\n                onChange={(e) => setEmptyInput(e.target.value)}\n            />\n        </form>\n    )\n}\n\nconst Post = ({ post }) => {\n    const auth = useAuth();\n    const [identity, setIdentity] = useState();\n    const location = useLocation();\n\n    const [internalPost, setInternalPost] = useState(post);\n    const [showComments, setShowComments] = useState(false);\n    const [isActive, setIsActive] = useState(internalPost.active);\n\n    const [, update] = useAxios({\n        url: `${process.env.REACT_APP_API}/post/one/${internalPost._id}`,\n        headers: {\n            Authorization: `Bearer ${auth?.user?.token}`\n        }\n    }, { manual: true });\n\n    const [, likePost] = useAxios({\n        url: `${process.env.REACT_APP_API}/post/like/${internalPost._id}`,\n        method: 'PATCH',\n        headers: {\n            Authorization: `Bearer ${auth?.user?.token}`\n        }\n    }, { manual: true });\n\n    const [, togglePost] = useAxios({\n        url: `${process.env.REACT_APP_API}/post/toggle/${internalPost._id}`,\n        method: 'PATCH',\n        headers: {\n            Authorization: `Bearer ${auth?.user?.token}`\n        }\n    }, { manual: true });\n\n    async function triggerUpdate(callback) {\n        try {\n            if (callback)\n                await callback();\n\n            let { data: updateData } = await update();\n            setInternalPost(updateData);\n        } catch(err) {\n            if (location.pathname === \"/my\")\n                alert('Post desactivado');\n            else\n                alert('error sad');\n        }\n    }\n\n    useEffect(() => {\n        async function getIdentity() {\n            try {\n                let res = await axios.get(`${process.env.REACT_APP_API}/auth/whoami`, {\n                    headers: {\n                        Authorization: `Bearer ${auth?.user?.token}`\n                    }\n                });\n                setIdentity(res.data.username);\n            } catch(err) {\n                alert('Error');\n            }\n        }\n\n        getIdentity();\n    }, []);\n\n    return (\n        <div className=\"w-full rounded-lg bg-gray-300 flex flex-col mb-6 md:w-2/5 md:m-4 lg:w-1/4 relative\">\n            {\n                location.pathname === \"/my\" && auth?.user?.role === \"admin\"\n                ?\n                <div \n                    className={`absolute top-0 right-0 p-2 space-x-1 flex items-center cursor-pointer\n                    ${ isActive && 'text-red-800' }`}\n                    onClick={() => { \n                        triggerUpdate(togglePost);\n                        setIsActive(!isActive);\n                    }}\n                >\n                    <Icon icon={faEye} />\n                </div>\n                :\n                <div \n                    className={`absolute top-0 right-0 p-2 space-x-1 flex items-center cursor-pointer\n                    ${ internalPost.likes.some(it => it.username === identity) && 'text-red-800' }`}\n                    onClick={() => triggerUpdate(likePost)}\n                >\n                    <Icon icon={faHeart} />\n                    <span className=\"text-xs\">{internalPost.likes.length ?? 0}</span>\n                </div>\n            }\n            <div className=\"bg-gray-400 rounded-t px-4 py-2 font-medium space-y-2\">\n                <h1 className=\"text-xs text-gray-800 lg:text-sm\">@ { internalPost.user.username }</h1>\n                <h2 className=\"text-sm lg:text-base\">{ internalPost.title }</h2>\n            </div>\n            {\n                internalPost.image && \n                <div className=\"w-full \">\n                    <img className=\"h-40 w-full object-contain\" src={internalPost.image} alt={internalPost.title} />\n                </div>\n            }\n            <div className=\"px-4 py-2 text-sm lg:text-base\">\n                <p>{ internalPost.description }</p>\n            </div>\n            <div className=\"w-full bg-gray-400 text-center py-2 cursor-pointer select-none\" onClick={() => setShowComments(!showComments)}>\n                {\n                    internalPost.comments.length > 0 && \n                        <span>\n                            <Icon icon={faComment} /> Mostrar comentarios\n                        </span>\n                }\n            </div>\n            <div>\n                {\n                    (showComments) && internalPost.comments.map((it) => <Comment key={ generate() } description={it.description} user={it.user} />)\n                }\n                <AddComment postId={internalPost._id} triggerUpdate={triggerUpdate} />\n            </div>\n        </div>\n    )\n}\n\nexport default Post;\n","C:\\Users\\netob\\OneDrive\\Escritorio\\proj\\src\\Providers\\authProvider.js",[],{"ruleId":"60","severity":1,"message":"61","line":127,"column":8,"nodeType":"62","endLine":127,"endColumn":10,"suggestions":"63"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth?.user?.token'. Either include it or remove the dependency array.","ArrayExpression",["64"],{"desc":"65","fix":"66"},"Update the dependencies array to be: [auth?.user?.token]",{"range":"67","text":"68"},[3896,3898],"[auth?.user?.token]"]